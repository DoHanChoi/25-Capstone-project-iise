{
  "permissions": {
    "allow": [
      "mcp__filesystem__edit_file",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__create_directory",
      "mcp__filesystem__write_file",
      "Bash(npm run build:*)",
      "mcp__playwright__browser_install",
      "Bash(npm run dev:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_press_key",
      "mcp__filesystem__search_files",
      "mcp__brave-search__brave_web_search",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "mcp__github__get_file_contents",
      "WebFetch(domain:raw.githubusercontent.com)",
      "mcp__supabase__execute_sql",
      "Bash(npm test:*)",
      "Bash(npx tsx:*)",
      "Bash(node scripts/verify-mureka-setup.js:*)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_close",
      "mcp__context7__resolve-library-id",
      "mcp__supabase__apply_migration",
      "SlashCommand(/sc:task:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(timeout:*)",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_fill_form",
      "Bash(where:*)",
      "WebFetch(domain:platform.mureka.ai)",
      "Bash(uvx:*)",
      "Bash(npm install:*)",
      "WebFetch(domain:useapi.net)",
      "Bash(node scripts/test-mureka-api.js:*)",
      "mcp__github__search_repositories",
      "Bash(curl:*)",
      "Bash(node scripts/test-music-flow.js:*)",
      "Bash(node scripts/setup-test-journey.js:*)",
      "Bash(taskkill /F /PID 20524)",
      "Bash(npx kill-port:*)",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_resize",
      "Bash(npx shadcn@latest add:*)",
      "Bash(npx tsc:*)",
      "WebFetch(domain:www.welaaa.com)",
      "WebFetch(domain:suno.com)",
      "WebFetch(domain:www.mureka.ai)",
      "mcp__playwright__browser_evaluate",
      "WebFetch(domain:magicui.design)",
      "WebFetch(domain:www.spotify.com)",
      "WebFetch(domain:www.goodreads.com)",
      "WebFetch(domain:letterboxd.com)",
      "WebFetch(domain:open.spotify.com)",
      "Bash(taskkill:*)",
      "Bash(dir \"C:\\Users\\USER\\bookbeats\\src\\lib\")",
      "Read(//c/Users/USER/Pictures/Screenshots/**)",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__read_multiple_files",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(find:*)",
      "Bash(tee:*)",
      "Bash(npm uninstall:*)",
      "Bash(node --version:*)",
      "Bash(npm --version:*)",
      "Bash(git --version:*)",
      "Bash(test:*)",
      "Bash(node scripts/check-server.js:*)",
      "Bash(node scripts/fix-framer-motion.js:*)",
      "Bash(rm:*)",
      "Bash(tree:*)",
      "Bash(git log:*)",
      "Bash(npx playwright test:*)",
      "Bash(npx playwright:*)",
      "WebFetch(domain:stripe.com)",
      "Bash(npm run server:status:*)",
      "Bash(node -e:*)",
      "WebFetch(domain:ui.shadcn.com)",
      "mcp__shadcn-ui__get_component_demo",
      "mcp__shadcn-ui__list_blocks",
      "mcp__shadcn-ui__get_block",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch:*)",
      "Bash(git update-index:*)",
      "Bash(git reflog:*)",
      "Bash(git gc:*)",
      "Bash(git push:*)",
      "Bash(git remote:*)",
      "WebFetch(domain:www.suno.com)",
      "WebFetch(domain:music.youtube.com)",
      "Bash(git diff:*)",
      "Bash(psql:*)",
      "mcp__postgres__query",
      "Bash(git merge:*)",
      "Bash(npm run server:kill:*)",
      "mcp__playwright__browser_navigate_back",
      "Bash(node scripts/check-music-tracks.js:*)",
      "Bash(node scripts/check-journey-music.js:*)",
      "Bash(node scripts/fix-reading-logs-rls.js:*)",
      "Bash(node scripts/test-rls-access.js:*)",
      "Bash(node scripts/apply-rls-fix.js:*)",
      "Bash(node scripts/check-foreign-keys.js:*)",
      "Bash(git branch:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "filesystem",
    "github",
    "postgres",
    "memory",
    "brave-search",
    "supabase",
    "context7",
    "playwright",
    "magic",
    "fetch",
    "sequential-thinking",
    "shadcn"
  ]
}
